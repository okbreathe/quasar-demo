{
  "user": {
    "name": "user",
    "email": "user@example.com",
    "settings":{"theme":"monokai","tab_size":2,"sort":"updated_at.desc","preview.padding":8,"preview.margin_bottom.p,ul,blockquote":1,"preview.line_height":1.5,"preview.font_size":14,"preview.font_family":"Ubuntu","editor.line_height":1.2,"editor.font_size":12,"editor.font_family":"Ubuntu Mono"}
  },
  "tag": { "name": "Welcome" },
  "page": {
    "title": "Hello World!",
    "content": "# Quasar\r\n\r\nQuasar is a [React](https://facebook.github.io/react/) powered Markdown wiki talkingto a [Phoenix](http://www.phoenixframework.org/)  backend.\r\n\r\n> **Hey!** Normally Quasar's persistence layer is handled by Postgres, but in this demo everything is saved to IndexedDB instead. Logging out will clear any persisted data!\r\n\r\nCode available on [Github](https://github.com/okbreathe/quasar) and [Gitlab](git@gitlab.com:okbreathe/quasar.git)\r\n\r\n## Features\r\n\r\n* Markdown editor via [Ace](https://ace.c9.io/)\r\n* Drag and Drop File Upload\r\n* Autosaving and Snapshots\r\n* Themeing and Typography Control\r\n* Tagging and Filtering\r\n* Vim and Emacs Emulation Modes\r\n \r\n**IE is not supported.**\r\n\r\n## Tour\r\n\r\n#### Creating Pages\r\n\r\nYou can create a new page by pressing the `+` icon next to the search box. Pages can have one or more tags. When you create a page it will be automatically tagged with the tag that is currently selected. If no tag is selected the page can be found under \"All Notes\" until it is tagged.\r\n\r\n#### Revisions\r\n\r\nQuasar will autosave every three minutes. If you have unsaved changes the sync icon in the upper-right corner will be red. To save immediately either press the icon or use the `control + s` shortcut. Autosaves will be deleted after 100 saves starting with the oldest. If you would like to have a permanent snapshot of a page you can use the revision menu to the left of the save icon to create an explicit snapshot that will never be deleted.\r\n\r\n#### Customization\r\n\r\nYou can customize your experience via the settings menu which can be accessed from the menu icon in the upper left. In the lower right-hand corner you can favorite, trash a page or change the view (editor-only, preview-only or split screen).\r\n\r\nThat's it!\r\n\r\n## Installation\r\n\r\n* Make sure you have the dependencies installed ( Postgres 9.2+, NodeJS, [Yarn](https://yarnpkg.com/en/), [Elixir](elixir-lang.org) )\r\n* Inside the project, install Elixir dependencies with `mix deps.get`\r\n* Install JavaScript dependencies with `yarn install`\r\n* Create your database with `mix ecto.create`\r\n* Migrate your database with `mix ecto.migrate` or seed the database with test data via `mix ecto.setup`\r\n* Start Phoenix endpoint with `mix phx.server`\r\n\r\nNow you can visit [`localhost:4000`](http://localhost:4000) from your browser.\r\n\r\n### Configuration\r\n\r\nFor changes in development mode, you can edit `config/dev.exs`. In production you can configure Quasar by creating a `config/prod.secret.exs` file. Copy `config/prod.secret.exs.example` to `config/prod.secret.exs` and edit in your details.\r\n\r\n```elixir\r\n# If true users can create new accounts through the web interface\r\nconfig :quasar,\r\n  allow_registration: false\r\n\r\n# If true Quasar stores everything in IndexedDb. Note that currently this is\r\n# purely for the demo app and nothing will be actually persisted. This may change in the\r\n# future to allow persistence via various providers e.g. DropBox\r\nconfig :quasar,\r\n  transient_storage: false\r\n\r\n# Store files on disk\r\nconfig :arc,\r\n  storage: Arc.Storage.Local\r\n\r\n# Or use AWS for storage\r\nconfig :arc,\r\n  storage: Arc.Storage.S3,\r\n  bucket: \"your-bucket\"\r\n\r\nconfig :ex_aws,\r\n  access_key_id: [{:system, \"AWS_ACCESS_KEY_ID\"}, :instance_role],\r\n  secret_access_key: [{:system, \"AWS_SECRET_ACCESS_KEY\"}, :instance_role]\r\n\r\n# Sending Email\r\n# Only used for sending out forgotten password emails\r\n# For other adapters see [Bamboo](https://github.com/thoughtbot/bamboo)'s docs\r\nconfig :quasar, Quasar.Mailer,\r\n  adapter: Bamboo.MandrillAdapter,\r\n  api_key: \"my_api_key\"\r\n  \r\n# Used to generate short filenames for uploads\r\nconfig :quasar,\r\n  upload_salt: \"put your unique phrase here\"\r\n```\r\n\r\n## In Production\r\n\r\nProduction releases can be handled by [distillery](https://github.com/bitwalker/distillery). To create a production release:\r\n\r\n```bash\r\n# Get dependencies\r\nmix deps.get\r\n# Compile assets\r\nmix phx.digest\r\n# Edit your production configuration\r\ncp config/prod.secret.exs.example config/prod.secret.exs\r\n# Build release. Note that PORT and HOST are optional and will default to the specified values\r\nMIX_ENV=prod PORT=4000 HOST=localhost mix release --env=prod\r\n# Much compiling later\r\n==> Release successfully built!\r\n    You can run it in one of the following ways:\r\n      Interactive: _build/prod/rel/quasar/bin/quasar console\r\n      Foreground: _build/prod/rel/quasar/bin/quasar foreground\r\n      Daemon: _build/prod/rel/quasar/bin/quasar start\r\n# Start the app\r\n./_build/prod/rel/quasar/bin/quasar start\r\n```\r\n\r\nSince you won't have access to mix in production, you can create a new user by connecting a console to the running release.\r\n\r\n```bash\r\n./_build/prod/rel/quasar/bin/quasar remote_console\r\n```\r\n\r\nNow run the user generation command in IEx.\r\n\r\n```elixir\r\niex(1)> Quasar.Accounts.generate(\"user\", \"user@email.com\", \"password\")\r\n```\r\n\r\n### Deployment\r\n\r\nQuasar can be deployed using  [edeliver](https://github.com/boldpoker/edeliver). To get started copy the `.deliver/config.example` to `.deliver/config` and edit in your configuration. The host will also require [Yarn](https://yarnpkg.com/) and [Elixir](http://elixir-lang.org/) to be available.\r\n\r\n### TODO\r\n- [X] Website\r\n- [ ] Tests\r\n- [ ] Alternate Backends\r\n- [ ] Native App\r\n"
  }
}
